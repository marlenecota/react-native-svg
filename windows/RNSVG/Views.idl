import "Types.idl";

namespace RNSVG
{
  [experimental]
  [default_interface]
  unsealed runtimeclass SvgNodeCommonProps : Microsoft.ReactNative.IComponentProps {
  };

  [experimental]
  [default_interface]
  unsealed runtimeclass SvgRenderableCommonProps : SvgNodeCommonProps {
  };

  [experimental]
  [default_interface]
  unsealed runtimeclass SvgGroupCommonProps : SvgRenderableCommonProps {
  };

  [experimental]
  [default_interface]
  runtimeclass SvgViewProps : Microsoft.ReactNative.IComponentProps {
  };

  [experimental]
  [default_interface]
  unsealed runtimeclass RectProps : SvgRenderableCommonProps {
  };

  [experimental]
  interface IRenderable
  {
    D2DGeometry Geometry;
    Boolean IsResponsible;

    void CreateResources();
    void Draw(D2DDeviceContext deviceContext, Windows.Foundation.Size size);
    void UpdateProperties(Microsoft.ReactNative.IComponentProps props, Microsoft.ReactNative.IComponentProps oldProps, Boolean forceUpdate, Boolean invalidate);
    void MergeProperties(RenderableView other);
    void SaveDefinition();
    void Unload();
    void CreateGeometry(D2DDeviceContext deviceContext);
    IRenderable HitTest(Windows.Foundation.Point point);
  };

  [experimental]
  [default_interface]
  runtimeclass SvgView : Microsoft.ReactNative.Composition.ViewComponentView, Microsoft.ReactNative.Composition.Experimental.IInternalCreateVisual, IRenderable
  {
    SvgView(Microsoft.ReactNative.Composition.CreateCompositionComponentViewArgs args);

    Windows.Foundation.Size ActualSize { get; };

    GroupView Group;
    Microsoft.ReactNative.Color CurrentColor{ get; };
    Windows.Foundation.Collections.IMap<String, IRenderable> Templates{ get; };
    Windows.Foundation.Collections.IMap<String, BrushView> Brushes{ get; };

    void Invalidate();
  };

   [experimental]
   [default_interface]
   unsealed runtimeclass RenderableView : Microsoft.ReactNative.ComponentView, IRenderable
   {
     RenderableView(Microsoft.ReactNative.CreateComponentViewArgs args);
     SvgView SvgRoot{ get; };
     Boolean IsUnloaded { get; };

     String Id{ get; };
     Windows.Foundation.Numerics.Matrix3x2 SvgTransform{ get; };
     Microsoft.ReactNative.Color Fill{ get; };
     Single FillOpacity{ get; };
     String FillBrushId{ get; };
     Microsoft.ReactNative.Color Stroke{ get; };
     Single StrokeOpacity{ get; };
     String StrokeBrushId{ get; };
     SVGLength StrokeWidth{ get; };
     Single StrokeMiterLimit{ get; };
     Single StrokeDashOffset{ get; };
     Windows.Foundation.Collections.IVector<SVGLength> StrokeDashArray{ get; };
     LineCap StrokeLineCap{ get; };
     LineJoin StrokeLineJoin{ get; };
     FillRule FillRule{ get; };
     D2DGeometry ClipPathGeometry(D2DDeviceContext deviceContext);
   };

   [experimental]
   [default_interface]
   runtimeclass RectView : RenderableView
   {
     RectView(Microsoft.ReactNative.CreateComponentViewArgs args);
   };

/*
  [default_interface]
  runtimeclass CircleView : RenderableView
  {
    CircleView();
  };

  [default_interface]
  runtimeclass EllipseView : RenderableView
  {
    EllipseView();
  };

  [default_interface]
  runtimeclass LineView : RenderableView
  {
    LineView();
  };

  [default_interface]
  runtimeclass PathView : RenderableView
  {
    PathView();
  };

  [default_interface]
  runtimeclass UseView : RenderableView
  {
    UseView();
  };

  [default_interface]
  runtimeclass ImageView : RenderableView
  {
    ImageView();
  };
*/
   [experimental]
   [default_interface]
   unsealed runtimeclass GroupView : RenderableView
   {
     GroupView(Microsoft.ReactNative.CreateComponentViewArgs args);

     Single FontSize;
     String FontFamily;
     String FontWeight;

     void DrawGroup(D2DDeviceContext deviceContext, Windows.Foundation.Size size);
   };
/*
  [default_interface]
  unsealed runtimeclass TextView : GroupView
  {
    TextView();
    Windows.Foundation.Collections.IVector<SVGLength> X{ get; };
    Windows.Foundation.Collections.IVector<SVGLength> Y{ get; };
    Windows.Foundation.Collections.IVector<SVGLength> DX{ get; };
    Windows.Foundation.Collections.IVector<SVGLength> DY{ get; };
  };

  [default_interface]
  runtimeclass TSpanView : TextView
  {
    TSpanView();

    Windows.Foundation.Collections.IVector<SVGLength> Rotate { get; };
  };

  [default_interface]
  runtimeclass DefsView : GroupView
  {
    DefsView();
  };

  [default_interface]
  runtimeclass SymbolView : GroupView
  {
    SymbolView();
    Single MinX{ get; };
    Single MinY{ get; };
    Single VbWidth{ get; };
    Single VbHeight{ get; };
    String Align{ get; };
    MeetOrSlice MeetOrSlice{ get; };
  };

  [default_interface]
  runtimeclass ClipPathView : GroupView
  {
    ClipPathView();
  };

  [default_interface]
  runtimeclass MarkerView : GroupView
  {
    MarkerView();
  };
*/
   [experimental]
   [default_interface]
   unsealed runtimeclass BrushView : GroupView
   {
     BrushView(Microsoft.ReactNative.CreateComponentViewArgs args);

     D2DBrush Brush{ get; };
     void CreateBrush();
     void SetBounds(Windows.Foundation.Rect rect);
   };
/*
  [default_interface]
  runtimeclass LinearGradientView : BrushView
  {
    LinearGradientView();
  };

  [default_interface]
  runtimeclass RadialGradientView : BrushView
  {
    RadialGradientView();
  };

  [default_interface]
  runtimeclass PatternView : BrushView
  {
    PatternView();
  };
  */
}